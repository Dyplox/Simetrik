tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

repositories {
    mavenLocal()
    mavenCentral()
}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath "net.serenity-bdd:serenity-single-page-report:2.1.4"
        classpath "net.serenity-bdd:serenity-gradle-plugin:3.2.0"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.3"
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'net.serenity-bdd.serenity-gradle-plugin'
apply plugin: "org.sonarqube"


group 'org.example'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

dependencies {
    testImplementation 'net.serenity-bdd:serenity-core:3.1.20'
    testImplementation 'net.serenity-bdd:serenity-junit:3.1.20'
    testImplementation 'net.serenity-bdd:serenity-ensure:3.1.20'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.hamcrest:hamcrest-library:2.2'
    testImplementation 'org.slf4j:slf4j-simple:1.7.36'
    testImplementation 'io.cucumber:cucumber-java8:7.2.3'
    testImplementation 'io.cucumber:cucumber-junit:7.2.3'
    testImplementation 'io.rest-assured:rest-assured:4.5.0'

    implementation 'net.serenity-bdd:serenity-screenplay-rest:3.1.20'
    implementation 'net.serenity-bdd:serenity-core:3.1.20'
    implementation 'net.serenity-bdd:serenity-junit:3.1.20'
    implementation 'net.serenity-bdd:serenity-screenplay:2.6.0'
    implementation 'net.serenity-bdd:serenity-screenplay-webdriver:3.1.20'
    implementation 'io.cucumber:cucumber-java8:7.2.3'

}

tasks.withType(Test) {
    useJUnit()
    gradle.startParameter.continueOnFailure = true
    test.finalizedBy(aggregate)
}

task parallel(type: Test) {
    includes = ['**/CnxRunner.class']
    excludes = []

    useJUnit()
    systemProperties = System.properties
    maxParallelForks = Runtime.runtime.availableProcessors()

    gradle.startParameter.continueOnFailure = true
    test.finalizedBy(aggregate)
}